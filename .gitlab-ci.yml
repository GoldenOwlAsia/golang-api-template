# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml

image: golang:1.19.5

stages:
  - test
  - build
  - deploy

lint:
  image: golangci/golangci-lint:v1.51.0
  stage: test
  script:
    - golangci-lint run

test:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

build:
  stage: build
  script:
    - mkdir -p mybinaries
    - go build -o mybinaries ./...
  artifacts:
    paths:
      - mybinaries

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production














image: golang:latest

stages:
  - test
  - build
  - deploy

lint:
  image: golangci/golangci-lint:v1.51.0
  stage: test
  script:
    - golangci-lint run

compile:
  stage: build
  script:
    - mkdir -p mybinaries
    - go build -o mybinaries ./...
  artifacts:
    paths:
      - mybinaries

test:
  image: golang:1.13.3-alpine3.10
  tags:
    - dind
    - docker
  stage: test
  script:
    - go get -v ./...
    - go test -v ./...

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
